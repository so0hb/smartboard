/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const BaseActionForm: typeof import('./src/components/common/index')['BaseActionForm']
  const BaseInput: typeof import('./src/components/common/index')['BaseInput']
  const BaseInputNumber: typeof import('./src/components/common/index')['BaseInputNumber']
  const BaseSelect: typeof import('./src/components/common/index')['BaseSelect']
  const BaseSwitch: typeof import('./src/components/common/index')['BaseSwitch']
  const BaseUpload: typeof import('./src/components/common/index')['BaseUpload']
  const DataTableBase: typeof import('./src/components/common/index')['DataTableBase']
  const EffectScope: typeof import('vue')['EffectScope']
  const Footer: typeof import('./src/components/common/index')['Footer']
  const GithubSite: typeof import('./src/components/custom/index')['GithubSite']
  const HoverButton: typeof import('./src/components/common/index')['HoverButton']
  const LanguageSelect: typeof import('./src/components/common/index')['LanguageSelect']
  const LoadingIcon: typeof import('./src/components/common/index')['LoadingIcon']
  const LogoApp: typeof import('./src/components/common/index')['LogoApp']
  const LogoUser: typeof import('./src/components/common/index')['LogoUser']
  const MainHeader: typeof import('./src/components/common/index')['MainHeader']
  const NaiveProvider: typeof import('./src/components/common/index')['NaiveProvider']
  const Profile: typeof import('./src/components/common/index')['Profile']
  const PromptStore: typeof import('./src/components/common/index')['PromptStore']
  const SelectCountry: typeof import('./src/components/common/index')['SelectCountry']
  const Setting: typeof import('./src/components/common/index')['Setting']
  const SvgIcon: typeof import('./src/components/common/index')['SvgIcon']
  const UserAvatar: typeof import('./src/components/common/index')['UserAvatar']
  const arDZ: typeof import('./src/locales/ar-DZ')['default']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const enUS: typeof import('./src/locales/en-US')['default']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const initState: typeof import('./src/store/modules/users/index')['initState']
  const initStateCompanyAI: typeof import('./src/store/modules/companyai')['initStateCompanyAI']
  const initStateCountry: typeof import('./src/store/modules/country')['initStateCountry']
  const initStateModelsAI: typeof import('./src/store/modules/modelsai')['initStateModelsAI']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const locales: typeof import('./src/locales/index')['default']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const setLocale: typeof import('./src/locales/index')['setLocale']
  const setupI18n: typeof import('./src/locales/index')['setupI18n']
  const setupStore: typeof import('./src/store/index')['setupStore']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const store: typeof import('./src/store/helper')['store']
  const t: typeof import('./src/locales/index')['t']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const translationsData: typeof import('./src/locales/index')['translationsData']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAppStore: typeof import('./src/store/modules/app/index')['useAppStore']
  const useAppStoreWithOut: typeof import('./src/store/modules/app/index')['useAppStoreWithOut']
  const useAppStoreWithOut1: typeof import('./src/store/modules/util/index')['useAppStoreWithOut1']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAuthStore: typeof import('./src/store/modules/auth/index')['useAuthStore']
  const useAuthStoreWithout: typeof import('./src/store/modules/auth/index')['useAuthStoreWithout']
  const useChatStore: typeof import('./src/store/modules/chat/index')['useChatStore']
  const useCompanyStore: typeof import('./src/store/modules/companyai')['useCompanyStore']
  const useCountryStore: typeof import('./src/store/modules/country')['useCountryStore']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDashboardStore: typeof import('./src/store/modules/dashboard/index')['useDashboardStore']
  const useDialog: typeof import('naive-ui')['useDialog']
  const useId: typeof import('vue')['useId']
  const useLoadingBar: typeof import('naive-ui')['useLoadingBar']
  const useMessage: typeof import('naive-ui')['useMessage']
  const useModel: typeof import('vue')['useModel']
  const useModelStore: typeof import('./src/store/modules/modelsai')['useModelStore']
  const useNotification: typeof import('naive-ui')['useNotification']
  const usePromptStore: typeof import('./src/store/modules/prompt/index')['usePromptStore']
  const useQuestionsStore: typeof import('./src/store/modules/questions/index')['useQuestionsStore']
  const useSettingStore: typeof import('./src/store/modules/settings/index')['useSettingStore']
  const useSlots: typeof import('vue')['useSlots']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useUserStore: typeof import('./src/store/modules/user/index')['useUserStore']
  const useUsersStore: typeof import('./src/store/modules/users/index')['useUsersStore']
  const useUtilStore: typeof import('./src/store/modules/util/index')['useUtilStore']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly BaseActionForm: UnwrapRef<typeof import('./src/components/common/index')['BaseActionForm']>
    readonly BaseInput: UnwrapRef<typeof import('./src/components/common/index')['BaseInput']>
    readonly BaseInputNumber: UnwrapRef<typeof import('./src/components/common/index')['BaseInputNumber']>
    readonly BaseSelect: UnwrapRef<typeof import('./src/components/common/index')['BaseSelect']>
    readonly BaseSwitch: UnwrapRef<typeof import('./src/components/common/index')['BaseSwitch']>
    readonly BaseUpload: UnwrapRef<typeof import('./src/components/common/index')['BaseUpload']>
    readonly DataTableBase: UnwrapRef<typeof import('./src/components/common/index')['DataTableBase']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly Footer: UnwrapRef<typeof import('./src/components/common/index')['Footer']>
    readonly GithubSite: UnwrapRef<typeof import('./src/components/custom/index')['GithubSite']>
    readonly HoverButton: UnwrapRef<typeof import('./src/components/common/index')['HoverButton']>
    readonly LanguageSelect: UnwrapRef<typeof import('./src/components/common/index')['LanguageSelect']>
    readonly LoadingIcon: UnwrapRef<typeof import('./src/components/common/index')['LoadingIcon']>
    readonly LogoApp: UnwrapRef<typeof import('./src/components/common/index')['LogoApp']>
    readonly LogoUser: UnwrapRef<typeof import('./src/components/common/index')['LogoUser']>
    readonly MainHeader: UnwrapRef<typeof import('./src/components/common/index')['MainHeader']>
    readonly NaiveProvider: UnwrapRef<typeof import('./src/components/common/index')['NaiveProvider']>
    readonly Profile: UnwrapRef<typeof import('./src/components/common/index')['Profile']>
    readonly PromptStore: UnwrapRef<typeof import('./src/components/common/index')['PromptStore']>
    readonly SelectCountry: UnwrapRef<typeof import('./src/components/common/index')['SelectCountry']>
    readonly Setting: UnwrapRef<typeof import('./src/components/common/index')['Setting']>
    readonly SvgIcon: UnwrapRef<typeof import('./src/components/common/index')['SvgIcon']>
    readonly UserAvatar: UnwrapRef<typeof import('./src/components/common/index')['UserAvatar']>
    readonly arDZ: UnwrapRef<typeof import('./src/locales/ar-DZ')['default']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly enUS: UnwrapRef<typeof import('./src/locales/en-US')['default']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly initState: UnwrapRef<typeof import('./src/store/modules/users/index')['initState']>
    readonly initStateCompanyAI: UnwrapRef<typeof import('./src/store/modules/companyai')['initStateCompanyAI']>
    readonly initStateCountry: UnwrapRef<typeof import('./src/store/modules/country')['initStateCountry']>
    readonly initStateModelsAI: UnwrapRef<typeof import('./src/store/modules/modelsai')['initStateModelsAI']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly locales: UnwrapRef<typeof import('./src/locales/index')['default']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly onWatcherCleanup: UnwrapRef<typeof import('vue')['onWatcherCleanup']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly setLocale: UnwrapRef<typeof import('./src/locales/index')['setLocale']>
    readonly setupI18n: UnwrapRef<typeof import('./src/locales/index')['setupI18n']>
    readonly setupStore: UnwrapRef<typeof import('./src/store/index')['setupStore']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly store: UnwrapRef<typeof import('./src/store/helper')['store']>
    readonly t: UnwrapRef<typeof import('./src/locales/index')['t']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly translationsData: UnwrapRef<typeof import('./src/locales/index')['translationsData']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAppStore: UnwrapRef<typeof import('./src/store/modules/app/index')['useAppStore']>
    readonly useAppStoreWithOut1: UnwrapRef<typeof import('./src/store/modules/util/index')['useAppStoreWithOut1']>
    readonly useAppStoreWithOut: UnwrapRef<typeof import('./src/store/modules/app/index')['useAppStoreWithOut']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAuthStore: UnwrapRef<typeof import('./src/store/modules/auth/index')['useAuthStore']>
    readonly useAuthStoreWithout: UnwrapRef<typeof import('./src/store/modules/auth/index')['useAuthStoreWithout']>
    readonly useChatStore: UnwrapRef<typeof import('./src/store/modules/chat/index')['useChatStore']>
    readonly useCompanyStore: UnwrapRef<typeof import('./src/store/modules/companyai')['useCompanyStore']>
    readonly useCountryStore: UnwrapRef<typeof import('./src/store/modules/country')['useCountryStore']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDashboardStore: UnwrapRef<typeof import('./src/store/modules/dashboard/index')['useDashboardStore']>
    readonly useDialog: UnwrapRef<typeof import('naive-ui')['useDialog']>
    readonly useId: UnwrapRef<typeof import('vue')['useId']>
    readonly useLoadingBar: UnwrapRef<typeof import('naive-ui')['useLoadingBar']>
    readonly useMessage: UnwrapRef<typeof import('naive-ui')['useMessage']>
    readonly useModel: UnwrapRef<typeof import('vue')['useModel']>
    readonly useModelStore: UnwrapRef<typeof import('./src/store/modules/modelsai')['useModelStore']>
    readonly useNotification: UnwrapRef<typeof import('naive-ui')['useNotification']>
    readonly usePromptStore: UnwrapRef<typeof import('./src/store/modules/prompt/index')['usePromptStore']>
    readonly useQuestionsStore: UnwrapRef<typeof import('./src/store/modules/questions/index')['useQuestionsStore']>
    readonly useSettingStore: UnwrapRef<typeof import('./src/store/modules/settings/index')['useSettingStore']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useTemplateRef: UnwrapRef<typeof import('vue')['useTemplateRef']>
    readonly useUserStore: UnwrapRef<typeof import('./src/store/modules/user/index')['useUserStore']>
    readonly useUsersStore: UnwrapRef<typeof import('./src/store/modules/users/index')['useUsersStore']>
    readonly useUtilStore: UnwrapRef<typeof import('./src/store/modules/util/index')['useUtilStore']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
